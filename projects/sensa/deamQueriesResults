command line: ./compareEASwithDiver.py v1 ['s2', 's3', 's5', 's14', 's16', 's17', 's20'] deamQueries 92
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s2.
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s3.
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s5.
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s14.
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s16.
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s17.
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>].
Done with query [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>].
Done with query [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>].
Done with query [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>].
Done with v1-s20.
===== chang=v1-s16 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 358 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37byNodeList()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 20039 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 348 milliseconds 
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 18501 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 368 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 20807 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 352 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 8911 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 361 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 8848 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
===== chang=v1-s17 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 358 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.MissingResourceFailureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception,org.apache.xml.security.signature.Reference)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.ReferenceNotInitializedException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.resolver.ResourceResolverException: void <init>(java.lang.String,java.lang.Exception,org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 17128 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 343 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 7588 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 345 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37byNodeList()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.MissingResourceFailureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception,org.apache.xml.security.signature.Reference)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.ReferenceNotInitializedException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.resolver.ResourceResolverException: void <init>(java.lang.String,java.lang.Exception,org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 15900 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 337 milliseconds 
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.signature.MissingResourceFailureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception,org.apache.xml.security.signature.Reference)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.ReferenceNotInitializedException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 14146 milliseconds 
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
EAS impact set of [<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>] costing 347 milliseconds 
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(org.w3c.dom.Node,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.MissingResourceFailureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception,org.apache.xml.security.signature.Reference)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.ReferenceNotInitializedException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
Diver impact set of [<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>] costing 7525 milliseconds 
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(org.w3c.dom.Node,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 355 milliseconds 
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.MissingResourceFailureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception,org.apache.xml.security.signature.Reference)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.signature.ReferenceNotInitializedException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverException: void <init>(java.lang.String,java.lang.Exception,org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[],java.lang.Exception)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 7593 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
===== chang=v1-s14 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 309 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 3690 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 297 milliseconds 
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.transforms.TransformationException: void <init>(java.lang.String,java.lang.Exception)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 3766 milliseconds 
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 303 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 3927 milliseconds 
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 299 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 3620 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 306 milliseconds 
	<org.apache.xml.security.exceptions.XMLSecurityException: void printStackTrace(java.io.PrintWriter)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: java.lang.String toString()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 3701 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
===== chang=v1-s20 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 358 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37byNodeList()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 19329 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 355 milliseconds 
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 17702 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 368 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 20134 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 350 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 8734 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 358 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 8652 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
===== chang=v1-s2 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 356 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37byNodeList()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 19332 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 355 milliseconds 
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 18013 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 368 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 20151 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 358 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 8824 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 533 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 8972 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
===== chang=v1-s3 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 359 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37byNodeList()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 18952 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 352 milliseconds 
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 17756 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 368 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 19967 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 350 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 8436 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 360 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 8496 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
===== chang=v1-s5 [from 92 tests] ==== 
EAS impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 358 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative02()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37byNodeList()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsRelative01()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test37()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeXPathNodeSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>] costing 19104 milliseconds 
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute01()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute02()>
	<org.apache.xml.security.test.c14n.helper.C14nHelperTest: void testNamespaceIsAbsolute03()>
EAS impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 352 milliseconds 
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetOctetStream1()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.test.transforms.implementations.TransformBase64DecodeTest: void test3()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void fatalError(org.xml.sax.SAXParseException)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
Diver impact set of [<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>] costing 17873 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet1()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetNodeSetGetNodeSet1()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet2()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet4()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.test.signature.XMLSignatureInputTest: void testSetOctetStreamGetNodeSet3()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 361 milliseconds 
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: org.w3c.dom.Element getDocFromBytes(byte[])>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.transforms.implementations.TransformXPath: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromInternalResolvers()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_rSASignature()>
	<org.apache.xml.security.signature.Manifest: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputCommentToWriter(org.w3c.dom.Comment)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.cert.X509Certificate resolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.utils.resolver.OfflineResolver: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void <init>()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACShortSignature()>
	<org.apache.xml.security.signature.SignedInfo: byte[] getCanonicalizedOctetStream()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx)>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: int getPositionRelativeToDocumentElement(org.w3c.dom.Node)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_core()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: int getBase64WrapLength()>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_signatureTypesSignature()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_sixteen_external_dsa()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <clinit>()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: byte[] engineCanonicalize(byte[])>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.test.resource.TestVectorResolver: void set1stSystemId(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y2()>
	<org.apache.xml.security.test.interop.InteropTest: boolean verify(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.Key)>
	<org.apache.xml.security.test.interop.InteropTest: boolean verifyHMAC(java.lang.String,org.apache.xml.security.utils.resolver.ResourceResolverSpi,boolean,byte[])>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: byte[] reduceBitLength(byte[],int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverAnonymous: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloped()>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: boolean c14nAndCompare(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[],int)>
	<org.apache.xml.security.transforms.implementations.FuncHere: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.Base64: byte[] decode(byte[])>
	<org.apache.xml.security.transforms.implementations.FuncHere: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <clinit>()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testTranslationFromUTF16toUTF8()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_manifestSignature_manifest()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: void <init>()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void update(byte[])>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.utils.Base64: char[] encodeFullBlock(byte[],int)>
	<org.apache.xml.security.keys.content.X509Data: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.Base64: java.lang.String encode(byte[])>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: void <init>()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <clinit>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.signature.XMLSignature: void setFollowNestedManifests(boolean)>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <clinit>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.io.InputStream)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.utils.HexDump: void <clinit>()>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEAlgorithmString()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: java.lang.String byteArrayToHexString(byte[])>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void addResourceResolver(org.apache.xml.security.utils.resolver.ResourceResolverSpi)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_dsa()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <clinit>()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineInitVerify(java.security.PublicKey)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.Base64: char getChar(int)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_dSASignature()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver getInstance(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: void <init>(org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromStream(java.io.InputStream)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.utils.CachedXPathFuncHereAPI: java.lang.String getStrFromNode(org.w3c.dom.Node)>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.signature.Reference: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: char[] encodeBlock(byte[],int)>
	<org.apache.xml.security.keys.content.RetrievalMethod: org.w3c.dom.Attr getURIAttr()>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test32()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.HexDump: void byte2hex(byte,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SubjectNameResolver: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.transforms.implementations.TransformC14N: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.resource.TestVectorResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <clinit>()>
	<org.apache.xml.security.c14n.helper.AlwaysAcceptNodeFilter: short acceptNode(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void process(org.w3c.dom.traversal.TreeWalker,java.lang.StringBuffer)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getElement()>
	<org.apache.xml.security.signature.SignedInfo: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test36()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.Init$FuncHereLoader: org.apache.xpath.functions.Function getFunction()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y5()>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getCurrentDir()>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac$IntegrityHmacSHA1: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: java.security.cert.X509Certificate getX509Certificate()>
	<org.apache.xml.security.utils.IgnoreAllErrorHandler: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: java.lang.String translateUriToFilename(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_xPathSignature()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature: boolean isDescendantOrSelf(org.w3c.dom.Node,org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: void engineUpdate(byte[])>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.transforms.implementations.FuncHereContext: void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <init>()>
	<org.apache.xml.security.transforms.implementations.TransformC14N: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.keys.content.RetrievalMethod: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.implementations.RetrievalMethodResolver: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputPItoWriter(org.w3c.dom.ProcessingInstruction)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_signatureAlgorithms_signatures_hMACSignature()>
	<org.apache.xml.security.keys.content.x509.XMLX509Certificate: byte[] getCertificateBytes()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.signature.XMLSignature: byte[] getSignatureValue()>
	<org.apache.xml.security.signature.XMLSignature: javax.crypto.SecretKey createSecretKey(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void engineUpdate(byte[])>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEAlgorithmString()>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalize(byte[])>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: byte[] convertXMLDSIGtoASN1(byte[])>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void testA()>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <clinit>()>
	<org.apache.xml.security.keys.content.X509Data: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFilePath(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void initVerify(java.security.PublicKey)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test35()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments: void <init>()>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineUpdate(byte[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.interop.IAIKTest: void test_coreFeatures_signatures_anonymousReferenceSignature()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <init>()>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_base64DecodeSignature()>
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.cert.X509Certificate)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_rsa()>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: boolean engineVerify(byte[])>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.test.resource.TestVectorResolver: java.lang.String getFileName(java.lang.String)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.signature.XMLSignatureInput: java.lang.String getSourceURI()>
	<org.apache.xml.security.test.interop.RSASecurityTest: void test_enveloping()>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y3()>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509SKIResolver: void <clinit>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315$C14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test33()>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <clinit>()>
	<org.apache.xml.security.transforms.implementations.TransformXPath: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <clinit>()>
	<org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver: void <clinit>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.content.RetrievalMethod: java.lang.String getType()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_b64_dsa()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.transforms.implementations.TransformC14NWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.Algorithm: java.lang.String getAlgorithmURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: byte[] getBytesFromTextChild()>
	<org.apache.xml.security.signature.XMLSignatureInput: org.apache.xpath.CachedXPathAPI getCachedXPathAPI()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.keys.content.keyvalues.RSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloping_hmac_sha1_40()>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASHA1: java.lang.String engineGetURI()>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test31withComments()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.cert.X509Certificate engineResolveX509Certificate(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.keys.KeyInfo: java.security.cert.X509Certificate getX509CertificateFromStaticResolvers()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformBase64Decode: void <init>()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_envelopedSignatureSignature()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: boolean verify(byte[])>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_external_b64_dsa()>
	<org.apache.xml.security.test.interop.BaltimoreTest: void test_fifteen_enveloped_dsa()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.algorithms.implementations.SignatureBaseRSA: java.lang.String engineGetJCEProviderName()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void testRelativeNSbehaviour()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: boolean engineVerify(byte[])>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineInitVerify(java.security.Key)>
	<org.apache.xml.security.signature.Reference: boolean typeIsReferenceToManifest()>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
	<org.apache.xml.security.algorithms.implementations.IntegrityHmac: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315Test: void test34validatingParser()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.test.interop.IAIKTest: void test_transforms_signatures_c14nSignature()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 20143 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.CanonicalizationException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 359 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.JavaUtils: byte[] getBytesFromFile(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Map getInscopeNamespaces(org.w3c.dom.Node)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>] costing 8666 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
EAS impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 363 milliseconds 
	<org.apache.xml.security.signature.XMLSignature: boolean checkSignatureValue(java.security.Key)>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Document)>
	<org.apache.xml.security.signature.Reference: byte[] getReferencedBytes()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element getChildElementLocalName(int,java.lang.String,java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.utils.I18n: java.lang.String getExceptionMessage(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.SignedInfo: boolean verify(boolean)>
	<org.apache.xml.security.exceptions.XMLSecurityException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputAttrToWriter(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.io.InputStream getOctetStream()>
	<org.apache.xml.security.utils.JavaUtils: boolean binaryCompare(byte[],byte[])>
	<org.apache.xml.security.signature.Manifest: boolean getVerificationResult(int)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <init>()>
	<org.apache.xml.security.utils.ElementProxy: int length(java.lang.String,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: org.w3c.dom.Element createElementForFamily(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: java.security.PublicKey resolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: void test_Y1()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.signature.XMLSignatureInput performTransforms(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.Reference: boolean verify()>
	<org.apache.xml.security.signature.Manifest: void setVerificationResult(int,boolean)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: void <init>()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getURI()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <init>()>
	<org.apache.xml.security.utils.JavaUtils: void writeBytesToFilename(java.lang.String,byte[])>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650(org.w3c.dom.Document)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx copy()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.Reference: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: void <init>(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void registerElementById(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getBaseURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isNodeSet()>
	<org.apache.xml.security.c14n.CanonicalizerSpi: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: java.lang.String getXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.utils.Base64: java.math.BigInteger decodeBigIntegerFromText(org.w3c.dom.Text)>
	<org.apache.xml.security.transforms.Transform: org.apache.xml.security.signature.XMLSignatureInput performTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean getProviderIsInClassPath(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: void <clinit>()>
	<org.apache.xml.security.utils.Base64: int getValue(char)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: void <init>()>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test222excl()>
	<org.apache.xml.security.transforms.TransformSpi: void setTransform(org.apache.xml.security.transforms.Transform)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.signature.XMLSignatureInput resolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void <init>()>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerSlash(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void outputTextToWriter(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()>
	<org.apache.xml.security.signature.Manifest: int getLength()>
	<org.apache.xml.security.keys.KeyInfo: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.transforms.TransformSpi: void <init>()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKey()>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.ElementProxy: void guaranteeThatElementInCorrectSpace(java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: boolean canResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(java.util.Set,org.apache.xpath.CachedXPathAPI)>
	<org.apache.xml.security.signature.XMLSignatureInput: void setMIMEType(java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.Reference item(int)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void reset()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: java.lang.String getBaseNamespace()>
	<org.apache.xml.security.utils.Base64: byte[] decode(java.lang.String)>
	<org.apache.xml.security.algorithms.implementations.SignatureDSA: void <init>()>
	<org.apache.xml.security.signature.Reference: java.lang.String getType()>
	<org.apache.xml.security.c14n.helper.NonNSAttrCompare: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set)>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromStaticResolvers()>
	<org.apache.xml.security.utils.ElementProxy: java.lang.String getDefaultPrefix(java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getProviderId()>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.keys.KeyInfo getKeyInfo()>
	<org.apache.xml.security.keys.KeyInfo: java.security.PublicKey getPublicKeyFromInternalResolvers()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx: void <init>(org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: boolean isXPointerId(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: boolean addProvider(java.lang.String)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdInDSNamespace(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: boolean verifyReferences(boolean)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP: void <init>()>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.signature.XMLSignatureInput getTransformsOutput()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.JCEMapper: org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass translateURItoJCEID(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.utils.resolver.ResourceResolver: void addProperties(java.util.Map)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeXPathNodeSet(org.w3c.dom.Node,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverFragment: void <clinit>()>
	<org.apache.xml.security.utils.ElementProxy: java.math.BigInteger getBigIntegerFromChildElement(java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.Transforms: int getLength()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List getAttrs(org.w3c.dom.Element,boolean,org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl$EC14nCtx)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: org.apache.xml.security.keys.keyresolver.KeyResolver item(int)>
	<org.apache.xml.security.signature.XMLSignatureInput: boolean isOctetStream()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: org.apache.xml.security.signature.XMLSignatureInput engineResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Reference: void <init>(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.signature.Manifest)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: java.lang.String getAlgorithmID()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: boolean engineCanResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: byte[] digest()>
	<org.apache.xml.security.utils.XMLUtils: void guaranteeThatElementInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementById(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.utils.XMLUtils: java.util.Set convertNodelistToSet(org.w3c.dom.NodeList)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeXPathNodeSet(java.util.Set,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.transforms.Transforms getTransforms()>
	<org.apache.xml.security.utils.resolver.ResourceResolver: org.apache.xml.security.utils.resolver.ResourceResolver getInstance(org.w3c.dom.Attr,java.lang.String,java.util.Vector)>
	<org.apache.xml.security.algorithms.JCEMapper$ProviderIdClass: void <init>(java.lang.String,java.lang.String)>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void <init>(boolean)>
	<org.apache.xml.security.c14n.helper.NSAttrCompare: int compare(java.lang.Object,java.lang.Object)>
	<org.apache.xml.security.signature.Reference: byte[] calculateDigest()>
	<org.apache.xml.security.signature.XMLSignatureInput: byte[] getBytes()>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.algorithms.SignatureAlgorithm: java.lang.String getImplementingClass(java.lang.String)>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: boolean canResolve(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void <init>(org.w3c.dom.Document,java.security.MessageDigest,java.lang.String)>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.util.Set prefixStr2Set(java.lang.String)>
	<org.apache.xml.security.signature.XMLSignatureException: void <init>(java.lang.String,java.lang.Object[])>
	<org.apache.xml.security.transforms.params.InclusiveNamespaces: java.lang.String getInclusiveNamespaces()>
	<org.apache.xml.security.algorithms.Algorithm: void <init>(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: int lengthInternalKeyResolver()>
	<org.apache.xml.security.utils.ElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: void update(byte[])>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void engineAddProperies(java.util.Map)>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: boolean isEqual(byte[],byte[])>
	<org.apache.xml.security.test.c14n.implementations.ExclusiveC14NInterop: java.lang.String t(java.lang.String,java.lang.String)>
	<org.apache.xml.security.signature.XMLSignature: org.apache.xml.security.signature.SignedInfo getSignedInfo()>
	<org.apache.xml.security.keys.keyresolver.KeyResolverSpi: void <init>()>
	<org.apache.xml.security.keys.keyresolver.KeyResolver: int length()>
	<org.apache.xml.security.utils.Base64: byte[] decode(org.w3c.dom.Element)>
	<org.apache.xml.security.keys.content.keyvalues.DSAKeyValue: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.SignatureElementProxy: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.keys.KeyInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.signature.Reference: org.apache.xml.security.algorithms.MessageDigestAlgorithm getMessageDigestAlgorithm()>
	<org.apache.xml.security.signature.Reference: void dereferenceURIandPerformTransforms()>
	<org.apache.xml.security.signature.XMLSignatureInput: void setSourceURI(java.lang.String)>
	<org.apache.xml.security.utils.XMLUtils: boolean elementIsInSignatureSpace(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getBaseLocalName()>
	<org.apache.xml.security.signature.Reference: java.lang.String getURI()>
	<org.apache.xml.security.signature.XMLSignatureInput: void <init>(byte[])>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: boolean engineCanResolve(org.w3c.dom.Attr,java.lang.String)>
	<org.apache.xml.security.signature.Manifest: org.apache.xml.security.signature.XMLSignatureInput getReferencedContentAfterTransformsItem(int)>
	<org.apache.xml.security.algorithms.Algorithm: void setAlgorithmURI(java.lang.String)>
	<org.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest: void test221excl()>
	<org.apache.xml.security.keys.keyresolver.implementations.RSAKeyValueResolver: void <init>()>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: byte[] engineCanonicalizeSubTree(org.w3c.dom.Node)>
	<org.apache.xml.security.transforms.Transform: java.lang.String getURI()>
	<org.apache.xml.security.transforms.Transforms: org.apache.xml.security.transforms.Transform item(int)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments: void <init>()>
	<org.apache.xml.security.utils.resolver.implementations.ResolverLocalFilesystem: void <init>()>
	<org.apache.xml.security.keys.keyresolver.implementations.DSAKeyValueResolver: java.security.PublicKey engineResolvePublicKey(org.w3c.dom.Element,java.lang.String,org.apache.xml.security.keys.storage.StorageResolver)>
	<org.apache.xml.security.signature.SignedInfo: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.algorithms.SignatureAlgorithmSpi: void engineGetContextFromElement(org.w3c.dom.Element)>
	<org.apache.xml.security.utils.XMLUtils: void circumventBug2650recurse(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.IdResolver: org.w3c.dom.Element getElementByIdType(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.utils.resolver.implementations.ResolverXPointer: void <clinit>()>
	<org.apache.xml.security.algorithms.MessageDigestAlgorithm: org.apache.xml.security.algorithms.MessageDigestAlgorithm getInstance(org.w3c.dom.Document,java.lang.String)>
	<org.apache.xml.security.c14n.Canonicalizer: byte[] canonicalizeSubtree(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Document getOwnerDocument(org.w3c.dom.Node)>
	<org.apache.xml.security.utils.resolver.ResourceResolverSpi: void <init>()>
	<org.apache.xml.security.utils.XMLUtils: org.w3c.dom.Element createDSctx(org.w3c.dom.Document,java.lang.String,java.lang.String)>
	<org.apache.xml.security.transforms.implementations.TransformC14NExclusive: org.apache.xml.security.signature.XMLSignatureInput enginePerformTransform(org.apache.xml.security.signature.XMLSignatureInput)>
	<org.apache.xml.security.signature.SignedInfo: org.w3c.dom.Element getSignatureMethodElement()>
	<org.apache.xml.security.transforms.Transform: void <init>(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.utils.ElementProxy: void <init>()>
Diver impact set of [<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>] costing 8884 milliseconds 
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: boolean utilizedOrIncluded(org.w3c.dom.Element,java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: void canonicalizeSubTree(org.w3c.dom.Node,java.util.Map,java.util.Map)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)>
	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsRelative(java.lang.String)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.Set visiblyUtilized(org.w3c.dom.Element)>
	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)>
change	query	EA	Diver	EA-Diver	Diver-EA	Size:Diver/EA	EATime	DiverTime	Time: EA/Diver

v1-s16 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	392 	5 	387 	0 	1.28% 	358 	20039 	1.79%
v1-s16 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	168 	4 	164 	0 	2.38% 	352 	8911 	3.95%
v1-s16 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	374 	7 	367 	0 	1.87% 	368 	20807 	1.77%
v1-s16 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	295 	23 	272 	0 	7.8% 	348 	18501 	1.88%
v1-s16 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	200 	6 	194 	0 	3.0% 	361 	8848 	4.08%
v1-s16 Size: Diver/EA is 3.149055%
v1-s16 Time: EA/Diver is 2.317589%
v1-s17 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	349 	7 	342 	0 	2.01% 	358 	17128 	2.09%
v1-s17 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	22 	3 	19 	0 	13.64% 	343 	7588 	4.52%
v1-s17 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	366 	5 	361 	0 	1.37% 	345 	15900 	2.17%
v1-s17 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	212 	17 	195 	0 	8.02% 	337 	14146 	2.38%
v1-s17 	<org.apache.xml.security.c14n.Canonicalizer: java.lang.String getXPATH_C14N_WITH_COMMENTS_SINGLE_NODE()> 	21 	3 	18 	0 	14.29% 	347 	7525 	4.61%
v1-s17 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	124 	6 	118 	0 	4.84% 	355 	7593 	4.68%
v1-s17 Size: Diver/EA is 3.747715%
v1-s17 Time: EA/Diver is 2.983686%
v1-s14 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	23 	5 	18 	0 	21.74% 	309 	3690 	8.37%
v1-s14 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	22 	3 	19 	0 	13.64% 	299 	3620 	8.26%
v1-s14 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	38 	6 	32 	0 	15.79% 	303 	3927 	7.72%
v1-s14 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	36 	10 	26 	0 	27.78% 	297 	3766 	7.89%
v1-s14 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	11 	7 	4 	0 	63.64% 	306 	3701 	8.27%
v1-s14 Size: Diver/EA is 23.846154%
v1-s14 Time: EA/Diver is 8.094525%
v1-s20 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	391 	5 	386 	0 	1.28% 	358 	19329 	1.85%
v1-s20 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	168 	4 	164 	0 	2.38% 	350 	8734 	4.01%
v1-s20 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	373 	7 	366 	0 	1.88% 	368 	20134 	1.83%
v1-s20 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	294 	23 	271 	0 	7.82% 	355 	17702 	2.01%
v1-s20 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	200 	6 	194 	0 	3.0% 	358 	8652 	4.14%
v1-s20 Size: Diver/EA is 3.155680%
v1-s20 Time: EA/Diver is 2.399700%
v1-s2 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	392 	5 	387 	0 	1.28% 	356 	19332 	1.84%
v1-s2 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	131 	4 	127 	0 	3.05% 	358 	8824 	4.06%
v1-s2 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	374 	7 	367 	0 	1.87% 	368 	20151 	1.83%
v1-s2 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	295 	23 	272 	0 	7.8% 	355 	18013 	1.97%
v1-s2 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	178 	6 	172 	0 	3.37% 	533 	8972 	5.94%
v1-s2 Size: Diver/EA is 3.284672%
v1-s2 Time: EA/Diver is 2.616480%
v1-s3 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	392 	5 	387 	0 	1.28% 	359 	18952 	1.89%
v1-s3 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	168 	4 	164 	0 	2.38% 	350 	8436 	4.15%
v1-s3 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	374 	7 	367 	0 	1.87% 	368 	19967 	1.84%
v1-s3 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	295 	23 	272 	0 	7.8% 	352 	17756 	1.98%
v1-s3 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	200 	6 	194 	0 	3.0% 	360 	8496 	4.24%
v1-s3 Size: Diver/EA is 3.149055%
v1-s3 Time: EA/Diver is 2.430475%
v1-s5 	<org.apache.xml.security.c14n.helper.C14nHelper: boolean namespaceIsAbsolute(java.lang.String)> 	390 	5 	385 	0 	1.28% 	358 	19104 	1.87%
v1-s5 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments: void <init>()> 	133 	4 	129 	0 	3.01% 	359 	8666 	4.14%
v1-s5 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315: java.util.List updateinscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	374 	7 	367 	0 	1.87% 	361 	20143 	1.79%
v1-s5 	<org.apache.xml.security.signature.XMLSignatureInput: java.util.Set getNodeSet()> 	293 	23 	270 	0 	7.85% 	352 	17873 	1.97%
v1-s5 	<org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl: java.util.List updateInscopeNamespacesAndReturnVisibleAttrs(org.w3c.dom.Element,java.util.Map,java.util.Map)> 	180 	6 	174 	0 	3.33% 	363 	8884 	4.09%
v1-s5 Size: Diver/EA is 3.284672%
v1-s5 Time: EA/Diver is 2.401232%
aggregate Size: Diver/EA is 3.600873%
aggregate Time: EA/Diver is 2.744012%
